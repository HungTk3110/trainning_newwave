import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:readmore/readmore.dart';
import 'package:training_newwave/configs/app_colors.dart';
import 'package:training_newwave/configs/app_constant.dart';
import 'package:training_newwave/configs/app_styles.dart';
import 'package:training_newwave/configs/app_vectors.dart';
import 'package:training_newwave/model/autogenerated_entity.dart';
import 'package:training_newwave/model/detail_movie_entity.dart';
import 'package:training_newwave/movie_app/networks/api_service.dart';
import 'package:training_newwave/movie_app/widget/action_movie_detail_widget.dart';
import 'package:training_newwave/movie_app/widget/list_cast_widget.dart';
import 'package:training_newwave/note_app_firebase_storage/widget/loading_widget.dart';

class MovieDetail extends StatefulWidget {
  final int id;

  const MovieDetail({
    Key? key,
    required this.id,
  }) : super(key: key);

  @override
  State<MovieDetail> createState() => _MovieDetailState();
}

class _MovieDetailState extends State<MovieDetail> {
  DetailMovie detailMovie = DetailMovie();
  List<Cast> listCast = [];
  int lengthListCastMore = 0;
  bool isBottomSheetShowing = true;

  @override
  void initState() {
    super.initState();
    fetchDetail();
  }

  void showBottomSheet() {
    showModalBottomSheet(
      context: context,
      isDismissible: false,
      isScrollControlled: true,
      useRootNavigator: true,
      barrierColor: Colors.black.withAlpha(1),
      backgroundColor: Colors.transparent,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(
          top: Radius.circular(40),
        ),
      ),
      clipBehavior: Clip.antiAliasWithSaveLayer,
      builder: (BuildContext context) {
        return WillPopScope(
          onWillPop: () async {
            isBottomSheetShowing = false;
            Navigator.pop(context);
            Navigator.pop(context);
            return true;
          },
          child: Container(
            decoration: BoxDecoration(
              gradient: LinearGradient(
                begin: Alignment.centerLeft,
                end: Alignment.centerRight,
                colors: <Color>[
                  AppColors.sanJuan,
                  AppColors.eastBay,
                ],
                tileMode: TileMode.mirror,
              ),
            ),
            child: Padding(
              padding: const EdgeInsets.symmetric(
                horizontal: 50,
              ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Padding(
                    padding: const EdgeInsets.only(top: 10, bottom: 12),
                    child: SvgPicture.asset(
                      AppVectors.icLine2,
                    ),
                  ),
                  Flexible(
                    child: Text(
                      detailMovie.title ?? "",
                      textAlign: TextAlign.center,
                      style: AppTextStyles.whiteS64Bold,
                    ),
                  ),
                  Text(
                    detailMovie.tagline ?? "",
                    style: AppTextStyles.white50S18Medium,
                  ),
                  ActionMovieDetailWidget(
                    detailMovie: detailMovie,
                  ),
                  Padding(
                    padding: const EdgeInsets.only(top: 16),
                    child: Center(
                      child: ReadMoreText(
                        detailMovie.overview ?? "",
                        trimLines: 3,
                        colorClickableText: Colors.lightBlueAccent,
                        trimMode: TrimMode.Line,
                        trimCollapsedText: 'More',
                        trimExpandedText: 'Less',
                        textAlign: TextAlign.start,
                        style: AppTextStyles.white75S12Medium,
                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.only(top: 20),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        Text(
                          "Cast",
                          style: AppTextStyles.whiteS18Bold,
                        ),
                        Padding(
                          padding: const EdgeInsets.only(top: 6),
                          child: Text(
                            "See all",
                            style: AppTextStyles.whiteS12Medium,
                          ),
                        ),
                      ],
                    ),
                  ),
                  ListCastWidget(
                    listCast: listCast,
                  ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }

  void fetchDetail() async {
    final result = await ApiService.fetchDetail(widget.id);
    final resultCast = await ApiService.fetchAutogenerated(widget.id);
    setState(
      () {
        detailMovie = result;
        listCast = resultCast.cast ?? [];
        lengthListCastMore = resultCast.cast?.length ?? 0 - 4;
      },
    );

    WidgetsBinding.instance.addPostFrameCallback(
      (timeStamp) {
        showBottomSheet();
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return detailMovie.id == null
        ? const LoadingWidget()
        : Scaffold(
            body: SizedBox(
              width: MediaQuery.of(context).size.width,
              height: MediaQuery.of(context).size.height,
              child: CachedNetworkImage(
                imageUrl:
                    AppConstant.baseImage + (detailMovie.posterPath ?? ""),
                fit: BoxFit.fill,
              ),
            ),
          );
  }
}
