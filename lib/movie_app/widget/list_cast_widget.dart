import 'package:flutter/material.dart';
import 'package:training_newwave/configs/app_colors.dart';
import 'package:training_newwave/configs/app_styles.dart';
import 'package:training_newwave/model/autogenerated_entity.dart';
import 'package:training_newwave/movie_app/widget/item_cast.dart';

class ListCastWidget extends StatelessWidget {
  final List<Cast> listCast;
  const ListCastWidget({
    Key? key,
    required this.listCast,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(top: 16),
      child: SizedBox(
        height: 122,
        child: ListView.separated(
          itemCount: (listCast.length) - 4 < 1 ? listCast.length : 5,
          shrinkWrap: true,
          scrollDirection: Axis.horizontal,
          padding: EdgeInsets.zero,
          physics: const NeverScrollableScrollPhysics(),
          separatorBuilder: (context, index) {
            return const SizedBox(width: 1);
          },
          itemBuilder: (context, index) {
            if (index == 4 && (listCast.length) - 4 > 0) {
              return Column(
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  Container(
                    width: 50,
                    height: 50,
                    decoration: BoxDecoration(
                      color: AppColors.white20,
                      borderRadius: BorderRadius.circular(15),
                    ),
                    child: Center(
                      child: Text(
                        "+ ${(listCast.length) - 4}",
                        style: AppTextStyles.whiteS18Medium,
                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.only(top: 8),
                    child: Text('',
                        maxLines: 2,
                        textAlign: TextAlign.center,
                        style: AppTextStyles.whiteS8Medium),
                  ),
                ],
              );
            } else {
              return ItemCast(
                listCast: listCast,
                cast: listCast[index],
              );
            }
          },
        ),
      ),
    );
  }
}
